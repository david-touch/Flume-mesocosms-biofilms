labels <- merge(labels, sdf, by = "Sample")
}
# Add, any custom-supplied plot-mapped variables
if ( length(color) > 1 ) {
data$color <- color
names(data)[names(data) == "color"] <- deparse(substitute(color))
color <- deparse(substitute(color))
}
if ( length(label) > 1 ) {
labels$label <- label
names(labels)[names(labels) == "label"] <- deparse(substitute(label))
label <- deparse(substitute(label))
}
p <- ggplot2::ggplot(data = data,
ggplot2::aes_string(x = "Size",
y = ".S",
group = "Sample",
color = color))
p <- p + ggplot2::labs(x = "Sequence Sample Size", y = "Species Richness")
if (!is.null(label)) {
p <- p + ggplot2::geom_text(data = labels,
ggplot2::aes_string(x = "x",
y = "y",
label = label,
color = color),
size = 4, hjust = 0)
}
p <- p + ggplot2::geom_line()
if (se) { ## add standard error if available
p <- p +
ggplot2::geom_ribbon(ggplot2::aes_string(ymin = ".S - .se",
ymax = ".S + .se",
color = NULL,
fill = color),
alpha = 0.2)
}
if (plot) {
plot(p)
}
invisible(p)
}
setwd("/Users/touchett/Documents/Éducation/EPFL/Chapter1/Flume-mesocosms-biofilms/Data")
rarecurve18S <- ggrare(Sentinel18S_2022, step = 1000, color = "Treatment",
plot = TRUE, parallel = FALSE, se = F)
rarecurve_18S <- rarecurve18S +
theme_classic() +
facet_wrap(~factor(Treatment, c("Nc","Nw","Ic", "Iw", "Sc", "Sw", "Cc", "Cw")), ncol = 2, scales='free') +
scale_color_manual(values = c("#283747","#85929e","#b03a2e","#ec7063","#1e8449","#52be80", "#2874a6","#5dade2"), breaks=c("Nc","Nw","Ic", "Iw", "Sc", "Sw", "Cc", "Cw"),
labels= c(bquote("N"[flow]*"C"[temp]), bquote("N"[flow]*"W"[temp]), bquote("I"[flow]*"C"[temp]), bquote("I"[flow]*"W"[temp]), bquote("S"[flow]*"C"[temp]), bquote("S"[flow]*"W"[temp]), bquote("C"[flow]*"C"[temp]), bquote("C"[flow]*"W"[temp]))) +
ylab("Species Richness (eukaryotic ASVs)") +
theme(legend.title = element_text(size = 14, face="bold"),
legend.text = element_text(size = 14),
axis.title.x = element_text(size = 16, face="bold"),
axis.title.y = element_text(size = 16, face="bold"),
axis.text.x =  element_text(size = 12),
axis.text.y =  element_text(size = 12, angle=90, hjust = 0.5),
strip.text.x = element_blank()) +
guides(colour = guide_legend(override.aes = list(linewidth= 3, linetype=2, lineend = "round"))) +
xlim(0, 150000) +
scale_y_continuous(breaks = c(0, 500, 800), limits = c(0, 1000))
rarecurve_18S
rarecurve16S <- ggrare(Sentinel16S_2022, step = 1000, color = "Treatment",
plot = TRUE, parallel = FALSE, se = F)
rarecurve_16S <- rarecurve16S +
theme_classic() +
facet_wrap(~factor(Treatment, c("Nc","Nw","Ic", "Iw", "Sc", "Sw", "Cc", "Cw")), ncol = 2, scales='free') +
scale_color_manual(values = c("#283747","#85929e","#b03a2e","#ec7063","#1e8449","#52be80", "#2874a6","#5dade2"), breaks=c("Nc","Nw","Ic", "Iw", "Sc", "Sw", "Cc", "Cw"),
labels= c(bquote("N"[flow]*"C"[temp]), bquote("N"[flow]*"W"[temp]), bquote("I"[flow]*"C"[temp]), bquote("I"[flow]*"W"[temp]), bquote("S"[flow]*"C"[temp]), bquote("S"[flow]*"W"[temp]), bquote("C"[flow]*"C"[temp]), bquote("C"[flow]*"W"[temp]))) +
ylab("Species Richness (bacterial ASVs)") +
theme(legend.title = element_text(size = 14, face="bold"),
legend.text = element_text(size = 14),
axis.title.x = element_text(size = 16, face="bold"),
axis.title.y = element_text(size = 16, face="bold"),
axis.text.x =  element_text(size = 12),
axis.text.y =  element_text(size = 12, angle=90, hjust = 0.5),
strip.text.x = element_blank()) +
guides(colour = guide_legend(override.aes = list(linewidth= 3, linetype=2, lineend = "round"))) +
xlim(0, 150000) +
scale_y_continuous(breaks = c(0, 1000, 2000), limits = c(0, 2500))
rarecurve_16S
FigureS3 <- ggarrange(rarecurve_16S, rarecurve_18S, ncol = 1, nrow = 2, labels = c("A", "B"), font.label = list(size = 18), common.legend = TRUE, legend = "right")
FigureS3
ggsave("FigureS3.pdf", FigureS2, width = 30,
height = 35,
units = "cm")
ggsave("FigureS3.pdf", FigureS3, width = 30,
height = 35,
units = "cm")
ggsave("FigureS1.pdf", FigureS1,  width = 30, height = 20, units = "cm")
Venn_16S_2022
phyloseq_2022_water_venn_tax_16S
Sentinel16S_2022_bacteria_filt
Sentinel16S_2022_water_bacteria
Venn_16S_2022
### NMDS biofilm and water --------------------------------------------------
matrix_dist_16S_2022_all <- as.matrix(t(data.frame(otu_table(Venn_16S_2022))))
### NMDS biofilm and water --------------------------------------------------
#Figure S????
phyloseq_2022_biofilm_16S <- tax_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S <- otu_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S
Sentinel16S_2022_water_bacteria_hell <- microbiome::transform(Sentinel16S_2022_water_bacteria, 'hell')
### NMDS biofilm and water --------------------------------------------------
#Figure S????
phyloseq_2022_water_16S <- tax_table(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_water_16S <- otu_table(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_water_16S <- sample_data(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_biofilm_16S <- tax_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S <- otu_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell)
tax_16S_all <- merge_phyloseq(phyloseq_2022_water_16S, phyloseq_2022_biofilm_16S)
asv_16S_all <- merge_phyloseq(phyloseq_2022_water_16S, phyloseq_2022_biofilm_16S)
meta_16S_all <- merge_phyloseq(phyloseq_2022_water_16S, phyloseq_2022_biofilm_16S)
NMDS_all_16S_2022 <- merge_phyloseq(tax_16S_all, asv_16S_all, meta_16S_all)
NMDS_all_16S_2022
### NMDS biofilm and water --------------------------------------------------
#Figure S????
phyloseq_2022_water_16S_tax <- tax_table(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_water_16S_asv <- otu_table(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_water_16S_meta <- sample_data(Sentinel16S_2022_water_bacteria_hell)
phyloseq_2022_biofilm_16S_tax <- tax_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S_asv <- otu_table(Sentinel16S_2022_bacteria_filt_merged_hell)
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell)
tax_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_tax, phyloseq_2022_biofilm_16S_tax)
asv_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_asv, phyloseq_2022_biofilm_16S_asv)
meta_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_meta, phyloseq_2022_biofilm_16S_meta)
NMDS_all_16S_2022 <- merge_phyloseq(tax_16S_all, asv_16S_all, meta_16S_all)
NMDS_all_16S_2022
Sentinel16S_2022_bacteria_filt_merged_hell
view(tax_table(NMDS_all_16S_2022))
view(sample_data(NMDS_all_16S_2022))
str(phyloseq_2022_biofilm_16S_meta)
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell) %>% mutate(Type = if_else(is.na(Type), "Biofilm", Type))
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell) %>% data.frame() %>% mutate(Type = if_else(is.na(Type), "Biofilm", Type))
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell) %>% mutate(Type = as.character(Type), Type = if_else(is.na(Type), "Biofilm", Type))
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell) %>% data.frame() %>% mutate(Type = as.character(Type), Type = if_else(is.na(Type), "Biofilm", Type))
phyloseq_2022_biofilm_16S_meta
phyloseq_2022_biofilm_16S_meta <- sample_data(Sentinel16S_2022_bacteria_filt_merged_hell) %>% data.frame() %>% mutate(Type = as.character(Type), Type = if_else(is.na(Type), "Biofilm", Type)) %>% sample_data()
tax_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_tax, phyloseq_2022_biofilm_16S_tax)
asv_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_asv, phyloseq_2022_biofilm_16S_asv)
meta_16S_all <- merge_phyloseq(phyloseq_2022_water_16S_meta, phyloseq_2022_biofilm_16S_meta)
NMDS_all_16S_2022 <- merge_phyloseq(tax_16S_all, asv_16S_all, meta_16S_all)
view(sample_data(NMDS_all_16S_2022))
matrix_dist_16S_2022_all <- as.matrix(t(data.frame(otu_table(NMDS_all_16S_2022))))
metadata_dist_16S_2022_all <- data.frame(sample_data(NMDS_all_16S_2022) %>% rownames_to_column("Samples")
)
metadata_dist_16S_2022_all <- data.frame(sample_data(NMDS_all_16S_2022)) %>% rownames_to_column("Samples")
set.seed(19950930)
dist_16S_2022_bray_all <- vegdist(metadata_dist_16S_2022_all, method ="bray") %>%
as.matrix() %>%
data.frame() %>%
rownames_to_column("Samples")
dist_16S_2022_bray_all <- vegdist(metadata_dist_16S_2022_all, method ="bray")
metadata_dist_16S_2022_all
dist_16S_2022_bray_all <- vegdist(matrix_dist_16S_2022_all, method ="bray") %>%
as.matrix() %>%
data.frame() %>%
rownames_to_column("Samples")
dist_16S_2022_all <- dist_16S_2022_bray_all %>%
dplyr::select(all_of(.[["Samples"]])) %>%
as.dist()
nmds_16S_2022_all <- metaMDS(dist_16S_2022_all, trymax=100)
stress_16S_all <- nmds_16S_2022_all$stress
stress_16S_all
scores_nmds_16S_2022_all <- scores(nmds_16S_2022_all) %>%
as_tibble(rownames = "Samples") %>%
inner_join(., metadata_dist_16S_2022_all, by="Samples")
scores_nmds_16S_2022_all  <- scores_nmds_16S_2022_all[order(scores_nmds_16S_2022_all$Treatment, scores_nmds_16S_2022_all$Time),]
NMDS_16S_2022 <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Flow), size = 2, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Flow), size = 2, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
NMDS_16S_2022_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Type, shape = Flow), size = 2, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 2, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 3, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.101") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
Sentinel18S_2022_water_photo_hell <- microbiome::transform(Sentinel18S_2022_water_photo, 'hell')
Sentinel18S_2022_water_others_hell <- microbiome::transform(Sentinel18S_2022_water_others, 'hell')
#Phototrophic eukaryotes
phyloseq_2022_water_18S_photo_tax <- tax_table(Sentinel18S_2022_water_photo_hell)
phyloseq_2022_water_18S_photo_asv <- otu_table(Sentinel18S_2022_water_photo_hell)
phyloseq_2022_water_18S_photo_meta <- sample_data(Sentinel18S_2022_water_photo_hell)
sample_data(Sentinel18S_2022_photo_filt_merged_hell)
phyloseq_2022_biofilm_18S_photo_tax <- tax_table(Sentinel18S_2022_photo_filt_merged_hell)
phyloseq_2022_biofilm_18S_photo_asv <- otu_table(Sentinel18S_2022_photo_filt_merged_hell)
phyloseq_2022_biofilm_18S_photo_meta <- sample_data(Sentinel18S_2022_photo_filt_merged_hell) %>% data.frame() %>% mutate(Type = as.character(Type), Type = if_else(is.na(Type), "Biofilm", Type)) %>% sample_data()
tax_18S_photo_all <- merge_phyloseq(phyloseq_2022_water_18S_photo_tax, phyloseq_2022_biofilm_18S_photo_tax)
asv_18S_photo_all <- merge_phyloseq(phyloseq_2022_water_18S_photo_asv, phyloseq_2022_biofilm_18S_photo_asv)
meta_18S_photo_all <- merge_phyloseq(phyloseq_2022_water_18S_photo_meta, phyloseq_2022_biofilm_18S_photo_meta)
NMDS_all_18S_photo_2022 <- merge_phyloseq(tax_18S_photo_all, asv_18S_photo_all, meta_18S_photo_all)
metadata_dist_18S_photo_2022_all <- data.frame(sample_data(NMDS_all_18S_photo_2022)) %>% rownames_to_column("Samples")
set.seed(19950930)
dist_18S_photo_2022_bray_all <- vegdist(matrix_dist_18S_photo_2022_all, method ="bray") %>%
as.matrix() %>%
data.frame() %>%
rownames_to_column("Samples")
matrix_dist_18S_photo_2022_all <- as.matrix(t(data.frame(otu_table(NMDS_all_18S_photo_2022))))
metadata_dist_18S_photo_2022_all <- data.frame(sample_data(NMDS_all_18S_photo_2022)) %>% rownames_to_column("Samples")
set.seed(19950930)
dist_18S_photo_2022_bray_all <- vegdist(matrix_dist_18S_photo_2022_all, method ="bray") %>%
as.matrix() %>%
data.frame() %>%
rownames_to_column("Samples")
dist_18S_photo_2022_all <- dist_18S_photo_2022_bray_all %>%
dplyr::select(all_of(.[["Samples"]])) %>%
as.dist()
nmds_18S_photo_2022_all <- metaMDS(dist_18S_photo_2022_all, trymax=100)
stress_16S_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.087") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
stress_18S_photo_all
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "magma", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.143") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all <- ggplot(scores_nmds_16S_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "viridis", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.087") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_16S_2022_all
scores_nmds_18S_photo_2022_all <- scores(nmds_18S_photo_2022_all) %>%
as_tibble(rownames = "Samples") %>%
inner_join(., metadata_dist_16S_2022_all, by="Samples")
scores_nmds_18S_photo_2022_all <- scores(nmds_18S_photo_2022_all) %>%
as_tibble(rownames = "Samples") %>%
inner_join(., metadata_dist_18S_photo_2022_all, by="Samples")
scores_nmds_18S_photo_2022_all  <- scores_nmds_18S_photo_2022_all[order(scores_nmds_18S_photo_2022_all$Treatment, scores_nmds_18S_photo_2022_all$Time),]
NMDS_18S_photo_2022_all <- ggplot(scores_nmds_18S_photo_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "magma", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.143") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_18S_photo_2022_all
#Non-phototrophic eukaryotes
phyloseq_2022_water_18S_others_tax <- tax_table(Sentinel18S_2022_water_others_hell)
phyloseq_2022_water_18S_others_asv <- otu_table(Sentinel18S_2022_water_others_hell)
phyloseq_2022_water_18S_others_meta <- sample_data(Sentinel18S_2022_water_others_hell)
phyloseq_2022_biofilm_18S_others_tax <- tax_table(Sentinel18S_2022_others_filt_merged_hell)
phyloseq_2022_biofilm_18S_others_asv <- otu_table(Sentinel18S_2022_others_filt_merged_hell)
phyloseq_2022_biofilm_18S_others_meta <- sample_data(Sentinel18S_2022_others_filt_merged_hell) %>% data.frame() %>% mutate(Type = as.character(Type), Type = if_else(is.na(Type), "Biofilm", Type)) %>% sample_data()
tax_18S_others_all <- merge_phyloseq(phyloseq_2022_water_18S_others_tax, phyloseq_2022_biofilm_18S_others_tax)
asv_18S_others_all <- merge_phyloseq(phyloseq_2022_water_18S_others_asv, phyloseq_2022_biofilm_18S_others_asv)
meta_18S_others_all <- merge_phyloseq(phyloseq_2022_water_18S_others_meta, phyloseq_2022_biofilm_18S_others_meta)
NMDS_all_18S_others_2022 <- merge_phyloseq(tax_18S_others_all, asv_18S_others_all, meta_18S_others_all)
matrix_dist_18S_others_2022_all <- as.matrix(t(data.frame(otu_table(NMDS_all_18S_others_2022))))
metadata_dist_18S_others_2022_all <- data.frame(sample_data(NMDS_all_18S_others_2022)) %>% rownames_to_column("Samples")
set.seed(19950930)
dist_18S_others_2022_bray_all <- vegdist(matrix_dist_18S_others_2022_all, method ="bray") %>%
as.matrix() %>%
data.frame() %>%
rownames_to_column("Samples")
dist_18S_others_2022_all <- dist_18S_others_2022_bray_all %>%
dplyr::select(all_of(.[["Samples"]])) %>%
as.dist()
nmds_18S_others_2022_all <- metaMDS(dist_18S_others_2022_all, trymax=100)
stress_18S_others_all <- nmds_18S_others_2022_all$stress
stress_18S_others_all
scores_nmds_18S_others_2022_all <- scores(nmds_18S_others_2022_all) %>%
as_tibble(rownames = "Samples") %>%
inner_join(., metadata_dist_18S_others_2022_all, by="Samples")
scores_nmds_18S_others_2022_all  <- scores_nmds_18S_others_2022_all[order(scores_nmds_18S_others_2022_all$Treatment, scores_nmds_18S_others_2022_all$Time),]
NMDS_18S_others_2022_all <- ggplot(scores_nmds_18S_others_2022_all, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(NMDS1, NMDS2, colour = Succession, shape = Type), size = 4, alpha = 0.8) +
scale_color_viridis(discrete = FALSE, option = "mako", breaks = c(0, 20, 40, 60, 80, 100)) +
theme_classic() +
guides(colour = guide_colourbar(barheight = 10)) +
labs(color = "Days of growth", caption = "Stress 0.089") +
scale_x_continuous(limits = c(-0.6, 0.5)) +
theme(legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title.y = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
strip.background = element_blank(),
plot.caption = element_text(size = 16, hjust = 1, vjust = 20),
strip.text = element_text(size = 16, face = "bold"),
axis.line = element_line())
NMDS_18S_others_2022_all
FigureSXX <- ggarrange(NMDS_16S_2022_all, NMDS_18S_photo_2022_all, NMDS_18S_others_2022_all, ncol = 1, nrow = 3, labels = c("A", "B", "C"), font.label = list(size = 18), align = "v")
FigureSXX
setwd("/Users/touchett/Documents/Éducation/EPFL/Chapter1/Flume-mesocosms-biofilms/Data")
ggsave("FigureXX.pdf", FigureSXX, width = 35,
height = 45,
units = "cm")
ggsave("FigureXX.pdf", FigureSXX, width = 20,
height = 40,
units = "cm")
ggsave("FigureXX.pdf", FigureSXX, width = 20,
height = 30,
units = "cm")
ggsave("FigureXX.pdf", FigureSXX, width = 30,
height = 40,
units = "cm")
#Differences?
adonis_bc_16S_all <- adonis2(matrix_dist_16S_2022_all ~ Type, data=metadata_dist_16S_2022_all, permutations=999, strata=metadata_dist_16S_2022_all$FlumeID, method="bray")
#Differences?
adonis_bc_16S_all <- adonis2(matrix_dist_16S_2022_all ~ Type, data=metadata_dist_16S_2022_all, permutations=999, strata=metadata_dist_16S_2022_all$FlumeID, method="bray")
str(matrix_dist_16S_2022_all)
#Differences?
adonis_bc_16S_all <- adonis2(matrix_dist_16S_2022_all ~ Type, data=metadata_dist_16S_2022_all, permutations=999, method="bray")
adonis_bc_16S_all #Succession, Flow, Temperature and Treatment are significant
#Differences?
adonis_bc_18S_others_all <- adonis2(matrix_dist_18S_otherS_2022_all ~ Type, data=metadata_dist_18S_other_2022_all, permutations=999, method="bray")
#Differences?
adonis_bc_18S_others_all <- adonis2(matrix_dist_18S_others_2022_all ~ Type, data=metadata_dist_18S_others_2022_all, permutations=999, method="bray")
adonis_bc_18S_others_all #Type are significant
#Differences?
adonis_bc_18S_photo_all <- adonis2(matrix_dist_18S_photo_2022_all ~ Type, data=metadata_dist_18S_photo_2022_all, permutations=999, method="bray")
adonis_bc_18S_photo_all #Type are significant
## Environmental parameters ------------------------------------------------
metadata_env <- metadata16SFull %>%
column_to_rownames("NAME") %>%
filter(Year == 2022) %>%
filter(Treatment == "Nw" | Treatment == "Nc" | Treatment == "River") %>%
select(-Primers, -Run, -Type, -TAD, -PO4, -NO3, -NH4, -NO2, -ChlA, -BA, -Time, -Sample, -FlumeID, -Flow, -Year, -Velocity) %>%
distinct() %>%
mutate(Ammonium = Ammonium/1000,
Bromide = Bromide/1000,
Calcium = Calcium/1000,
Chloride = Chloride/1000,
DOC = DOC/1000,
Fluoride = Fluoride/1000,
Lithium = Lithium/1000,
Magnesium = Magnesium/1000,
Nitrate = Nitrate/1000,
Nitrite = Nitrite/1000,
Potassium = Potassium/1000,
Sodium = Sodium/1000,
Strontium = Strontium/1000,
Sulfate = Sulfate/1000)
parameters <- c("pH", "C25", "O2", "Turbidity", "Fluoride", "Chloride", "Nitrite",
"Bromide", "Nitrate", "Sulphate", "Lithium", "Sodium", "Ammonium", "Magnesium",
"Potassium", "Calcium", "Strontium", "DOC")
metadata_env_long <- metadata_env %>%
pivot_longer(cols = all_of(parameters), names_to = "Parameter", values_to = "Value")
parameters <- c("pH", "C25", "O2", "Turbidity", "Fluoride", "Chloride", "Nitrite",
"Bromide", "Nitrate", "Sulfate", "Lithium", "Sodium", "Ammonium", "Magnesium",
"Potassium", "Calcium", "Strontium", "DOC")
metadata_env_long <- metadata_env %>%
pivot_longer(cols = all_of(parameters), names_to = "Parameter", values_to = "Value")
labels_param <- c("Ammonium (ppm)", "Bromide (ppm)", "Conductivity (µS/cm)", "Calcium (ppm)", "Chloride (ppm)",
"DOC (ppm)", "Fluoride (ppm)", "Lithium (ppm)", "Magnesium (ppm)", "Nitrate (ppm)", "Nitrite (ppm)",
"O2 (mg/L)", "pH", "Potassium (ppm)", "Sodium (ppm)", "Strontium (ppm)", "Sulphate (ppm)", "Turbidity (NTU)")
names(labels_param) <- c("Ammonium", "Bromide", "C25", "Calcium", "Chloride",
"DOC", "Fluoride", "Lithium", "Magnesium", "Nitrate", "Nitrite",
"O2", "pH", "Potassium", "Sodium", "Strontium", "Sulfate", "Turbidity")
FigureS2 <- ggplot(metadata_env_long, aes(x = Succession, y = Value, color = Treatment)) +
geom_point() +
geom_line() +
labs(x = "Succession (days)",
y = "Value",
color = "Measurement site") +
theme_classic() +
theme(strip.text = element_text(size = 14),
legend.title = element_text(size = 14, face="bold"),
legend.text = element_text(size = 14),
axis.title = element_text(size = 16, face="bold"),
axis.text.y =  element_text(size = 12),
axis.text.x = element_text(size = 14),
legend.position = "bottom") +
scale_color_manual(values = c("royalblue", "firebrick", "darkblue" ), labels = c("Control temp. header tank", "Warm temp. header tank", "Streamwater")) +
facet_wrap(~ Parameter, labeller = as_labeller(labels_param), scales = "free_y", ncol = 3)
FigureS2
fit_18S_photo_env_pv
ggsave("Figure15.pdf", FigureS15, width = 30,
height = 40,
units = "cm")
